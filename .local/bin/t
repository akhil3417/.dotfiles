#!/bin/sh

# Dependencies - rofi, peerflix, and vlc
# You can substitute dmenu, webtorrent, and mpv

mkdir -p $HOME/.cache/netflix

menu="dmenu -i -l 33 -p Select"
baseurl="https://1337x.to"
cachedir="$HOME/.cache/netflix"

if [ -z $1 ]; then
  query=$(dmenu -l 0 -p 'Search Torrent')
else
  query=$1
fi

query="$(echo $query | sed 's/ /+/g')"

#curl -s https://1337x.to/category-search/$query/Movies/1/ > $cachedir/tmp.html
curl -s $baseurl/search/$query/1/ > $cachedir/tmp.html

# Get Titles
grep -o '<a href="/torrent/.*</a>' $cachedir/tmp.html |
  sed 's/<[^>]*>//g' > $cachedir/titles.bw

result_count=$(wc -l $cachedir/titles.bw | awk '{print $1}')
if [ "$result_count" -lt 1 ]; then
  notify-send "üòî No Result found. Try again üî¥" -i "NONE"
  exit 0
fi

# Seeders and Leechers
grep -o '<td class="coll-2 seeds.*</td>\|<td class="coll-3 leeches.*</td>' $cachedir/tmp.html |
  sed 's/<[^>]*>//g' | sed 'N;s/\n/ /' > $cachedir/seedleech.bw

# Size
grep -o '<td class="coll-4 size.*</td>' $cachedir/tmp.html |
  sed 's/<span class="seeds">.*<\/span>//g' |
  sed -e 's/<[^>]*>//g' > $cachedir/size.bw

# Links
grep -E '/torrent/' $cachedir/tmp.html |
  sed -E 's#.*(/torrent/.*)/">.*/#\1#' |
  sed 's/td>//g' > $cachedir/links.bw

# Clearning up some data to display
sed 's/\./ /g; s/\-/ /g' $cachedir/titles.bw |
  sed 's/[^A-Za-z0-9 ]//g' | tr -s " " > $cachedir/tmp && mv $cachedir/tmp $cachedir/titles.bw

awk '{print NR " - ["$0"]"}' $cachedir/size.bw > $cachedir/tmp && mv $cachedir/tmp $cachedir/size.bw
awk '{print "[S:"$1 ", L:"$2"]" }' $cachedir/seedleech.bw > $cachedir/tmp && mv $cachedir/tmp $cachedir/seedleech.bw

# Getting the line number
LINE=$(paste -d\   $cachedir/size.bw $cachedir/seedleech.bw $cachedir/titles.bw |
  $menu |
  cut -d\- -f1 |
  awk '{$1=$1; print}')

if [ -z "$LINE" ]; then
  notify-send "üòî No Result selected. Exiting... üî¥" -i "NONE"
  exit 0
fi
notify-send "üîç Searching Magnet seeds üß≤" -i "NONE"
url=$(head -n $LINE $cachedir/links.bw | tail -n +$LINE)
fullURL="${baseurl}${url}/"

# Requesting page for magnet link
curl -s $fullURL > $cachedir/tmp.html
magnet=$(grep -Po "magnet:\?xt=urn:btih:[a-zA-Z0-9]*" $cachedir/tmp.html | head -n 1)

# see note about dependencies at top of script
#peerflix --mpv -a "$magnet"
while true;do
echo "1. Stream"
echo "2. Download"
echo -n "Alright Enter Your choice :"
read -r OPT
case $OPT in
 '2')
   echo -n "Downloading $magnet"
   figlet -w 100 "Downloading"
   if [ "$magnet" != "" ];then
   echo "$magnet"
   else
    echo "mirror not found"
    exit 0
   fi
 ;;
 '1')
   echo -n "Streaming $magnet"
   # echo "$lnk"
   if [ "$magnet" != "" ];then
# Simple notification
notify-send "üé• Enjoy Watching ‚ò∫Ô∏è " -i "NONE"
    peerflix --mpv -a "$magnet"
   else
    echo "mirror not found"
    exit 0
   fi 
 ;;
esac
done
